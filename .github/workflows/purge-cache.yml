name: Purge Cache

on:
  workflow_run:
    workflows:
      - Deploy
    types:
      - completed

jobs:
  purge-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "branch-name"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/branch-name.zip`, Buffer.from(download.data));

      # In some cases Cloudflare returns stale version of the resume.pdf file
      # An alternative resolution would be to disable cache for that path either
      # by using a cache rule or setting a no-cache header for the path
      - name: Purge CloudFlare cache for resume.pdf
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          unzip $GITHUB_WORKSPACE/branch-name.zip
          BRANCH_NAME="$(cat branch-name)"

          # we only purge cache for main branch deployments
          if [ "$BRANCH_NAME" != "main" ]; then
            exit 0
          fi

          res=$(curl \
            --url "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ACCOUNT_ID}/purge_cache" \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            --data '{
              "files":[{"url":"https://aleksac.me/resume.pdf"}]
            }')
          if [ $(echo $res | jq -r '.success') != true ]; then
            exit 1
          fi
